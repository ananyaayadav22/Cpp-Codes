#include <bits/stdc++.h> 
stack<int> pushAtBottom(stack<int>& myStack, int x) 
{
    int n = myStack.size();
    
    int arr[n];
    int i=0;
    
    while(!myStack.empty()){
        arr[i] = myStack.top();
        myStack.pop();
        i++;
    }

    myStack.push(x);

    for(int i=n-1; i>=0; i--){
        myStack.push(arr[i]);
    }
    return myStack;
}




//this is also correct (using recursion)
// void solve(stack<int>& s, int x) {
//     //base case
//     if(s.empty()) {
//         s.push(x);
//         return ;
//     }
    
//     int num = s.top();
//     s.pop();
    
//     //recursive call
//     solve(s, x);
    
//     s.push(num);
// }


// stack<int> pushAtBottom(stack<int>& myStack, int x) 
// {
//     solve(myStack, x);
//     return myStack;
// }
